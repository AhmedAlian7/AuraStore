@model PaginatedList<ProductViewModel>

@{
    ViewData["Title"] = "Products";
    var isAuthenticated = User.Identity?.IsAuthenticated ?? false;
}

<div class="products-page">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-md-8">
            <h2 class="fw-bold text-dark mb-2">Our Products</h2>
            <p class="text-muted">Discover our amazing collection of products</p>
        </div>
    </div>

    <!-- Filter and Search Section -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form asp-action="Index" method="get" class="row g-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control" name="search" value="@Context.Request.Query["search"]" placeholder="Search products...">
                    </div>
                </div>
                <div class="col-md-3">
                    <select class="form-select" name="category">
                        <option value="">All Categories</option>
                        @foreach (var category in ViewBag.Categories as IEnumerable<SelectListItem> ?? Enumerable.Empty<SelectListItem>())
                        {
                            <option value="@category.Value" selected="@category.Selected">@category.Text</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <select class="form-select" name="sortBy">
                        <option value="">Sort by</option>
                        <option value="name" selected='@(Context.Request.Query["sortBy"] == "name" ? "selected" : "")'>Name</option>
                        <option value="price_asc" selected='@(Context.Request.Query["sortBy"] == "price_asc" ? "selected" : "")'>Price: Low to High</option>
                        <option value="price_desc" selected='@(Context.Request.Query["sortBy"] == "price_desc" ? "selected" : "")'>Price: High to Low</option>
                        <option value="rating" selected='@(Context.Request.Query["sortBy"] == "rating" ? "selected" : "")'>Rating</option>
                        <option value="newest" selected='@(Context.Request.Query["sortBy"] == "newest" ? "selected" : "")'>Newest</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-filter me-2"></i>Filter
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Products Grid -->
    @if (Model.Any())
    {
        <div class="products-grid">
            @foreach (var product in Model)
            {
                <div class="product-grid-item">
                    @await Html.PartialAsync("_ProductCard", product)
                </div>
            }
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-center py-4">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@(Model.PageIndex - 1)">Previous</a>
                        </li>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }

                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@(Model.PageIndex + 1)">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
    else
    {
        <!-- Empty State -->
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-search fa-5x text-muted"></i>
            </div>
            <h4 class="text-muted">No products found</h4>
            <p class="text-muted">Try adjusting your search criteria or browse all products.</p>
            @if (Context.Request.Query.Any())
            {
                <a asp-action="Index" class="btn btn-primary">View All Products</a>
            }
        </div>
    }
</div>

@section Scripts {
    <script src="~/js/wishlist.js"></script>
    <script src="~/js/cart.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
}
@section Styles {
    <link href="~/css/products.css" rel="stylesheet" />
}

