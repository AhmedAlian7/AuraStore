@using E_Commerce.Business.ViewModels.Order
@model PaginatedList<OrderViewModel>

@{
    ViewData["Title"] = "My Orders";
}

<div class="container mt-5">
    <h2 class="mb-4">My Orders</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            You don't have any orders yet.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Order ID</th>
                        <th>Total Amount</th>
                        <th>Total Items</th>
                        <th>Created At</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td>@order.Id</td>
                            <td>@order.TotalAmount.ToString("C")</td>
                            <td>@order.TotalItems</td>
                            <td>@order.CreatedAt.ToString()</td>
                            <td>
                                <span class="badge bg-primary">@order.OrderStatus</span>
                            </td>
                            <td>
                                <div class="d-flex gap-2">
                                    <a asp-area="Customer"
                                       asp-controller="Orders"
                                       asp-action="ViewDetails"
                                       asp-route-id="@order.Id"
                                       class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-eye"></i> View
                                    </a>

                                    @if (order.OrderStatus.ToString() != "Cancelled")
                                    {
                                        <form asp-controller="Orders" asp-action="CancelOrder" asp-route-id="@order.Id" method="post" class="d-inline cancel-form">
                                            <button type="button" class="btn btn-sm btn-danger btn-cancel" data-order-id="@order.Id">
                                                <i class="bi bi-x-circle"></i> Cancel
                                            </button>
                                        </form>
                                    }
                                    else
                                    {
                                        <span class="text-muted small">Already Cancelled</span>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex - 1)">Previous</a>
                </li>

                <li class="page-item disabled">
                    <span class="page-link">
                        Page @Model.PageIndex of @Model.TotalPages
                    </span>
                </li>

                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex + 1)">Next</a>
                </li>
            </ul>
        </nav>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".btn-cancel").forEach(function (btn) {
                btn.addEventListener("click", async function () {
                    const form = this.closest("form");
                    const result = await Swal.fire({
                        title: 'Are you sure?',
                        text: 'Are you sure you want to cancel this order?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, cancel it!',
                        cancelButtonText: 'No, keep it',
                        customClass: {
                            confirmButton: 'btn btn-danger mx-2',
                            cancelButton: 'btn btn-secondary mx-2'
                        },
                        buttonsStyling: false,
                        reverseButtons: true
                    });

                    if (result.isConfirmed) {
                        form.submit();
                    }
                });
            });
        });
    </script>
}